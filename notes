Problems


    1 - After registering user, l see deep execution problem in the home apge, especially in choose languagecomponent
    2 - Need to also adding some statistics for learned screen. if the one language select, show only words.
    3 - Need to also, solve the problem in choosing language section in learned woords screen
    4 - When choose the starred words, then go to the learned words and return again words screen, starred shows as starred but showing the all woprds not starred - Working



I have a very interesting problem. I am working on a react native app. I am using redux for state management. I have a problem with the state management. The state is not updating properly.
Firstly, l need to select a language for fetching the learned words. l select 'Russian', selected_lang show as null. But when l click second time Spanish lang, l see the seelcted lang as 'ru' when l click
first time. why this happen and how can solve this problem

LearnedScreen.jsx

    export default function LearnedScreen() {

    const dispatch = useDispatch();

    const { is_auth } = useSelector((state) => state.authSlice);

    const { words, words_pending, selectedLanguage, availableLanguages } = useSelector((state) => state.wordSlice);

    const navigation = useNavigation();

    useFocusEffect(
        useCallback(() => {
        if (is_auth && availableLanguages.length === 0) {
            dispatch(WordService.fetchAvailableLanguages());
        }
        }, [is_auth])
    );


    useFocusEffect(
        useCallback(() => {
        if (is_auth) {
            console.log('selected language is in the learned secreen ...........................................................', selectedLanguage)
                
            dispatch(WordService.handleLanguageSelect({
            langCode: selectedLanguage,
            filter: 'learned'
            }));
            dispatch(setSelectedLanguage(selectedLanguage));
        }
        console.log('fething learned words is working')
        }, [is_auth, dispatch])
    );


    return (

        <SafeAreaView className="flex-1 bg-gray-50">
        {/* Language Selector */}
            {availableLanguages?.length > 1 && (

                    <View className="px-3 pb-1 bg-white border-b border-gray-100">

                        {/* Section Header */}
                        <Text
                            className="text-xl font-bold text-gray-800 mb-4 tracking-tight"
                            style={{ fontFamily: 'IBMPlexSans-Regular' }}
                        >
                            Choose Language
                        </Text>

                        {/* Language List */}
                        <View className="space-y-3 ">
                            {availableLanguages.map((lang) => {
                                const isSelected = selectedLanguage === lang.lang;

                                return (
                                    <TouchableOpacity
                                        key={lang.lang}
                                        onPress={() => {
                                            dispatch(setSelectedLanguage(lang.lang));
                                            console.log('now selected language is in learned ...........................................................', selectedLanguage)
                                            console.log('now selected language is in learned ...........................................................', lang)
                                            console.log('now selected language is in learned ...........................................................', lang.lang)
                                            dispatch(
                                                // WordService.handleLanguageSelect({
                                                //     filter: 'learned',
                                                //     langCode: lang.lang,
                                                // })
                                                WordService.handleLanguageSelect({
                                                    filter: 'learned',
                                                    langCode: selectedLanguage,
                                                })
                                            );
                                        }}
                            ...