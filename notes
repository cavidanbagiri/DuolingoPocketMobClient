
Problems
1 - Design profile Screen
2 - Create Favotite Screen


Today Will Solve: 
P-3


Next Ideas:
1 - Create Translate Screen





Deepseek

I wanna add a button to the bottom of the output text that says "Translate" and when you click it, it will generate a ai answer in the same screen. What do you think about it?
The main mean is that functionality is without change the tab or the screen, user can generate ai. Wjat do you think about it?


<View className="flex-1 bg-gray-50">
            {/* --- HEADER --- */}
            <View className="flex-row items-center justify-between px-4 py-3 bg-white border-b border-gray-200">

                <Text className="text-lg font-semibold text-gray-900">Translate</Text>

                <TouchableOpacity
                    onPress={() => navigation.navigate('Favorites')}
                >
                    <Ionicons name="heart-outline" size={24} color="#374151" />
                </TouchableOpacity>
            </View>

            {/* --- LANGUAGE SELECTORS --- */}
            <View className="flex-row items-center justify-between px-6 py-4 bg-white border-b border-gray-100">
                <TouchableOpacity
                    onPress={() => setShowLangModal('from')}
                    activeOpacity={0.7}
                    className="flex-1 max-w-[45%] px-5 py-3 bg-gray-100 rounded-full flex-row items-center justify-center space-x-2"
                    accessibilityLabel={`Translate from ${TRANSLATE_LANGUAGES_LIST[fromLang]}`}
                >
                    <Text className="font-semibold text-gray-800 truncate">
                        {TRANSLATE_LANGUAGES_LIST[fromLang]}
                    </Text>
                </TouchableOpacity>
                <LanguagePickerModal
                    visible={showLangModal === 'from'}
                    onClose={() => setShowLangModal(null)}
                    onSelect={(langCode) => setFromLang(langCode)}
                    selectedLang={fromLang}
                    excludeLang={toLang}
                    title="Translate from"
                />

                {/* Swap Button */}
                <TouchableOpacity
                    onPress={handleSwapLanguages}
                    activeOpacity={0.6}
                    className="p-3 bg-indigo-100 rounded-full mx-1"
                    accessibilityLabel="Swap languages"
                    accessibilityHint="Switch translation direction"
                >
                    <Ionicons name="swap-horizontal" size={20} color="#6366F1" />
                </TouchableOpacity>

                {/* "To" Language Pill */}
                <LanguagePickerModal
                    visible={showLangModal === 'to'}
                    onClose={() => setShowLangModal(null)}
                    onSelect={(langCode) => setToLang(langCode)}
                    selectedLang={toLang}
                    excludeLang={fromLang}
                    title="Translate to"
                />
                <TouchableOpacity
                    onPress={() => setShowLangModal('to')}
                    activeOpacity={0.7}
                    className="flex-1 max-w-[45%] px-5 py-3 bg-indigo-100 rounded-full flex-row items-center justify-center space-x-2"
                    accessibilityLabel={`Translate to ${TRANSLATE_LANGUAGES_LIST[toLang]}`}
                >
                    <Text className="font-semibold text-indigo-800 truncate">
                        {TRANSLATE_LANGUAGES_LIST[toLang]}
                    </Text>
                </TouchableOpacity>

            </View>

            {/* --- INPUT/OUTPUT CARD --- */}
            <View className="flex-1 px-5 py-6">
                <View className="bg-white rounded-2xl shadow-sm overflow-hidden">
                    <TouchableOpacity
                        className='flex-row justify-end p-2'
                        onPress={() => {
                            dispatch(clearTranslatedText());
                            setInputText('');
                        }}
                    >
                        <Ionicons name="close" size={24} color="#9CA3AF" />
                    </TouchableOpacity>
                    {/* Input Section */}
                    <View className="px-4 pb-4 border-b border-gray-100">
                        <TextInput
                            className="text-gray-900 text-lg min-h-[100px] "
                            multiline
                            placeholder="Type text to translate..."
                            value={inputText}
                            onChangeText={(text) => {
                                setInputText(text);
                                handleTextChange(text);
                            }}
                            autoFocus
                            textAlignVertical="top"
                        />
                        <View className="flex-row items-center justify-between mt-3 ">
                            <Text className="text-xs text-gray-500">{inputText.length}/500</Text>
                            <View className='flex-row items-center'>
                                <TouchableOpacity className='mr-2'
                                        onPress={async () => {
                                            await Clipboard.setStringAsync(inputText);
                                        }}
                                    >
                                        <Ionicons name="clipboard-outline" size={18} color="#4B5563" /> 
                                </TouchableOpacity>
                                <VoiceButtonComponent text={inputText} language={fromLang} />
                                <TouchableOpacity
                                    className='ml-2'
                                    onPress={() => {
                                        if (toLang) {
                                            const payload = {
                                                text: inputText,
                                                language_code: fromLang,
                                                native: nativeLang,
                                            }
                                            dispatch(setCurrentWord(payload))
                                            navigation.jumpTo('AI Chat');
                                            navigation.navigate('AI Chat', {
                                                initialQuery: inputText
                                            });
                                        }
                                    }}
                                >
                                    <Ionicons name="sparkles-outline" size={20} color="#4B5563" />
                                </TouchableOpacity>
                                <TouchableOpacity
                                    className={`ml-4`}
                                    onPress={handleSaveToFavorites}
                                >
                                    <Ionicons
                                        name={isFavorite ? "heart" : "heart-outline"}
                                        size={20}
                                        color={isFavorite ? "#EF4444" : "#4B5563"}
                                    />
                                </TouchableOpacity>
                            </View>
                        </View>
                    </View>

                    {/* Output Section */}
                    <View className="p-4">
                        {translatedText ? (
                            <>
                                <Text className="text-lg text-gray-900">{translatedText.translation}</Text>
                                <View className="flex-row items-center justify-between mt-3">
                                    <TouchableOpacity
                                        onPress={async () => {
                                            await Clipboard.setStringAsync(translatedText.translation);
                                        }}
                                    >
                                        <Text className="text-sm text-blue-600">Copy</Text>
                                    </TouchableOpacity>
                                    <View className='flex-row items-center'>
                                        <VoiceButtonComponent text={translatedText.translation} language={toLang} />
                                        <TouchableOpacity
                                            className='ml-2'
                                            onPress={() => {
                                                if (toLang) {
                                                    const payload = {
                                                        text: translatedText.translation,
                                                        language_code: toLang,
                                                        native: nativeLang,
                                                    }
                                                    dispatch(setCurrentWord(payload))
                                                    navigation.jumpTo('AI Chat');
                                                    navigation.navigate('AI Chat', {
                                                        initialQuery: inputText
                                                    });
                                                }
                                            }}
                                        >
                                            <Ionicons name="sparkles-outline" size={20} color="#4B5563" />
                                        </TouchableOpacity>

                                    </View>
                                </View>
                            </>
                        ) : (
                            <Text className="text-gray-400">Translation will appear here...</Text>
                        )}
                    </View>
                </View>
            </View>

            {/* AI Chat Screen */}
            <View className='p-6'>
                <TouchableOpacity
                    className="flex-1 bg-indigo-600 py-4 rounded-full items-center mb-20"
                    onPress={() => {
                        dispatch(TranslateService.translateText({
                            text: inputText,
                            from_lang: fromLang,
                            to_lang: toLang,
                        })).unwrap();
                    }}
                    disabled={inputText.length === 0}
                >
                    <Text className="text-white font-semibold">Translate</Text>
                </TouchableOpacity>
            </View>

            {/* --- ACTION BAR (FIXED BOTTOM) --- */}
            <View className="flex-row items-center px-5 py-4 bg-white border-t border-gray-200">
                <TouchableOpacity
                    className={`p-3 rounded-full mr-4 ${isFavorite ? 'bg-red-100' : 'bg-gray-100'}`}
                    onPress={handleSaveToFavorites}
                >
                    <Ionicons
                        name={isFavorite ? "heart" : "heart-outline"}
                        size={24}
                        color={isFavorite ? "#EF4444" : "#4B5563"}
                    />
                </TouchableOpacity>

                <TouchableOpacity
                    className="flex-1 bg-indigo-600 py-4 rounded-full items-center"
                    onPress={() => {
                        dispatch(TranslateService.translateText({
                            text: inputText,
                            from_lang: fromLang,
                            to_lang: toLang,
                        })).unwrap();
                    }}
                    disabled={inputText.length === 0}
                >
                    <Text className="text-white font-semibold">Translate</Text>
                </TouchableOpacity>
            </View>
        </View>